# SPDX-FileCopyrightText: 2022 Dennis Gl√§ser <dennis.glaeser@iws.uni-stuttgart.de>
# SPDX-License-Identifier: GPL-3.0-or-later

name: test-suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler_pkg: [g++-12]
        include:
           - c_compiler: gcc-12
             compiler_pkg: g++-12
           - cxx_compiler: g++-12
             compiler_pkg: g++-12

    steps:
      - name: install-dependencies
        run: sudo apt install ${{ matrix.compiler_pkg }} mpi-default-bin mpi-default-dev

      - name: install-pip-packages
        run: python3 -m pip install vtk reuse

      - name: checkout-repository
        uses: actions/checkout@v2

      - name: check-reuse-compliance
        run: reuse lint

      - name: configure
        run: |
          CXX_COMPILER="${{ matrix.cxx_compiler }}"
          C_COMPILER="${{ matrix.c_compiler }}"
          cmake -DCMAKE_C_COMPILER=/usr/bin/$C_COMPILER \
                -DCMAKE_CXX_COMPILER=/usr/bin/$CXX_COMPILER \
                -DGRIDFORMAT_BUILD_TESTS=ON \
                -B build

      - name: build
        run: pushd build && make build_tests && popd

      - name: test
        run: |
          pushd build && ctest --output-on-failure && popd

      - name: install
        run: |
          cmake -DCMAKE_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$(pwd)/install -B build
          cmake --install build

      - name: test-installed-pkg
        run: |
          mkdir installation-test && cp -r test installation-test
          pushd installation-test
            echo "cmake_minimum_required(VERSION 3.18)" > CMakeLists.txt
            echo "project(gridformat_test_suite VERSION 1.0.0)" >> CMakeLists.txt
            echo "enable_testing()" >> CMakeLists.txt
            echo "find_package(gridformat REQUIRED)" >> CMakeLists.txt
            echo "add_subdirectory(test)" >> CMakeLists.txt
            cmake -Dgridformat_ROOT=$(pwd)/../install \
                  -DCMAKE_C_COMPILER=/usr/bin/${{ matrix.c_compiler }} \
                  -DCMAKE_CXX_COMPILER=/usr/bin/${{ matrix.cxx_compiler }} \
                  -B build
            pushd build && make build_tests && ctest --output-on-failure && popd
          popd

      - name: test-examples
        run: |
          GFMT_TREE=$GITHUB_HEAD_REF
          if [[ -z "$GFMT_TREE" ]]; then
            GFMT_TREE=$GITHUB_SHA
          fi
          pushd examples
            cmake -DCMAKE_C_COMPILER=/usr/bin/${{ matrix.c_compiler }} \
                  -DCMAKE_CXX_COMPILER=/usr/bin/${{ matrix.cxx_compiler }} \
                  -DGRIDFORMAT_FETCH_TREE=$GFMT_TREE \
                  -B build
          pushd build && make && ctest --output-on-failure
