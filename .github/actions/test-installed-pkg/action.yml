# SPDX-FileCopyrightText: 2022 Dennis Gl√§ser <dennis.glaeser@iws.uni-stuttgart.de>
# SPDX-License-Identifier: GPL-3.0-or-later

name: test-installed-package
inputs:
  c_compiler:
    required: true
  cxx_compiler:
    required: true
runs:
  using: composite
  steps:
    - name: remove-build-directory
      run: rm -rf build
      shell: bash

    - name: install-gridformat
      run: |
        cmake -DCMAKE_C_COMPILER=${{inputs.c_compiler}} \
              -DCMAKE_CXX_COMPILER=${{inputs.cxx_compiler}} \
              -DGRIDFORMAT_BUILD_TESTS=OFF \
              -DCMAKE_INSTALL_PREFIX=$(pwd)/install \
              -B build && \
        cmake --build build && \
        cmake --install build
      shell: bash

    - name: test-installed-pkg
      run: |
        mkdir installation-test && cp -r test installation-test
        pushd installation-test
          echo "cmake_minimum_required(VERSION 3.18)" > CMakeLists.txt
          echo "project(gridformat_test_suite VERSION 1.0.0)" >> CMakeLists.txt
          echo "enable_testing()" >> CMakeLists.txt
          echo "find_package(gridformat REQUIRED)" >> CMakeLists.txt
          echo "add_subdirectory(test)" >> CMakeLists.txt
          cmake -Dgridformat_ROOT=$(pwd)/../install \
                -DCMAKE_C_COMPILER=${{inputs.c_compiler}} \
                -DCMAKE_CXX_COMPILER=${{inputs.cxx_compiler}} \
                -DCMAKE_BUILD_TYPE=Release \
                -B build
          pushd build && make build_tests && ctest --output-on-failure && popd
      shell: bash

    - name: test-examples
      run: |
        pushd examples
          cmake -DCMAKE_C_COMPILER=${{inputs.c_compiler}} \
                -DCMAKE_CXX_COMPILER=${{inputs.cxx_compiler}} \
                -Dgridformat_ROOT=$(pwd)/../install \
                -B build
        pushd build && make && ctest --output-on-failure
      shell: bash

    - name: test-examples-with-fetch-content
      run: |
        GFMT_TREE=$GITHUB_HEAD_REF
        if [[ -z "$GFMT_TREE" ]]; then
          GFMT_TREE=$GITHUB_SHA
        fi
        pushd examples
          cmake -DCMAKE_C_COMPILER=${{inputs.c_compiler}} \
                -DCMAKE_CXX_COMPILER=${{inputs.cxx_compiler}} \
                -DGRIDFORMAT_FETCH_TREE=$GFMT_TREE \
                -B build
        pushd build && make && ctest --output-on-failure
      shell: bash
