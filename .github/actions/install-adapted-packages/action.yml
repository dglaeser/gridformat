# SPDX-FileCopyrightText: 2022 Dennis Gl√§ser <dennis.glaeser@iws.uni-stuttgart.de>
# SPDX-License-Identifier: GPL-3.0-or-later

name: install-adapted-packages
inputs:
  dune_version:
    required: false
    default: 2.9
  dealii_version:
    required: false
    default: 9.4.0
  cgal_version:
    required: false
    default: 5.2.2
  dolfinx_version:
    required: false
    default: 0.6.0
runs:
  using: composite
  steps:
    - name: install-dune-grid
      run: |
        mkdir dune_libs && pushd dune_libs
            echo "CMAKE_FLAGS=\"-DCMAKE_BUILD_TYPE=Release -DDUNE_ENABLE_PYTHONBINDINGS=0\"" > dune.opts
            git clone --depth=1 --branch=releases/${{inputs.dune_version}} https://gitlab.dune-project.org/core/dune-common.git
            git clone --depth=1 --branch=releases/${{inputs.dune_version}} https://gitlab.dune-project.org/core/dune-geometry.git
            git clone --depth=1 --branch=releases/${{inputs.dune_version}} https://gitlab.dune-project.org/core/dune-grid.git
            ./dune-common/bin/dunecontrol --opts=dune.opts all
            sudo ./dune-common/bin/dunecontrol --opts=dune.opts make install
        popd && rm -rf dune_libs
        sudo ldconfig
      shell: bash
    - name: install-dealii
      run: |
        export REPO=ppa:ginggs/deal.ii-${{inputs.dealii_version}}-backports
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y $REPO
        sudo apt-get install -y libdeal.ii-dev
      shell: bash
    - name: install-cgal
      run: |
        git clone --branch=v${{inputs.cgal_version}} --depth=1 https://github.com/CGAL/cgal.git
        pushd cgal
          cmake -DCMAKE_INSTALL_PREFIX=/gridformat-manually-installed-deps/ -B build
          sudo cmake --install build
        popd && rm -rf cgal
      shell: bash
    - name: install-dolfinx
      run: |
        sudo apt-get install libblas-dev \
                             liblapack-dev \
                             pybind11-dev \
                             libpugixml-dev \
                             libboost-timer-dev \
                             libboost-filesystem-dev \
                             petsc-dev
        pip install fenics-ffcx==${{inputs.dolfinx_version}} pybind11

        git clone --depth=1 --branch=v${{inputs.dolfinx_version}} https://github.com/FEniCS/basix.git
        pushd basix
            cmake -DCMAKE_INSTALL_PREFIX=/gridformat-manually-installed-deps/ -B build
            cmake --build build && sudo cmake --install build
        popd
        rm -rf basix

        git clone --depth=1 --branch=v${{inputs.dolfinx_version}} https://github.com/FEniCS/dolfinx.git
        pushd dolfinx/cpp
            cmake -DCMAKE_INSTALL_PREFIX=/gridformat-manually-installed-deps/ -B build
            cmake --build build && sudo cmake --install build
        popd
        rm -rf dolfinx
      shell: bash
