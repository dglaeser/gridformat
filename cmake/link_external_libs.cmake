# SPDX-FileCopyrightText: 2022 Dennis Gl√§ser <dennis.glaeser@iws.uni-stuttgart.de>
# SPDX-License-Identifier: GPL-3.0-or-later

find_package(ZLIB)
if (ZLIB_FOUND)
    target_link_libraries(${PROJECT_NAME} INTERFACE ZLIB::ZLIB)
    target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_ZLIB)
    set(GRIDFORMAT_HAVE_ZLIB true)
endif ()

find_package(LZ4)
if (LZ4_FOUND)
    target_link_libraries(${PROJECT_NAME} INTERFACE LZ4::LZ4)
    target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_LZ4)
    set(GRIDFORMAT_HAVE_LZ4 true)
endif ()

find_package(LZMA)
if (LZMA_FOUND)
    target_link_libraries(${PROJECT_NAME} INTERFACE LZMA::LZMA)
    target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_LZMA)
    set(GRIDFORMAT_HAVE_LZMA true)
endif ()

find_package(MPI COMPONENTS CXX)
if (MPI_FOUND)
    target_link_libraries(${PROJECT_NAME} INTERFACE MPI::MPI_CXX)
    target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_MPI)
    set(GRIDFORMAT_HAVE_MPI true)
endif ()

option(GRIDFORMAT_BUILD_HIGH_FIVE "Controls whether HighFive is included in the build" ON)
find_package(HighFive QUIET)
if (NOT HighFive_FOUND)
    if (GRIDFORMAT_BUILD_HIGH_FIVE)
        if (EXISTS ${CMAKE_SOURCE_DIR}/deps/HighFive/CMakeLists.txt)
            find_package(Boost QUIET COMPONENTS system serialization)
            set(HIGHFIVE_USE_BOOST ${Boost_FOUND})
            set(HIGHFIVE_UNIT_TESTS OFF)
            set(HIGHFIVE_EXAMPLES OFF)
            set(GRIDFORMAT_HIGHFIVE_SOURCE_INCLUDED true)
            message(STATUS "Including HighFive in the source tree")
            add_subdirectory(${CMAKE_SOURCE_DIR}/deps/HighFive)
        else ()
            message(STATUS "HighFive not found")
        endif ()
    endif()
else()
    message(STATUS "Using preinstalled HighFive package")
endif ()

if (HighFive_FOUND OR GRIDFORMAT_HIGHFIVE_SOURCE_INCLUDED)
    target_link_libraries(${PROJECT_NAME} INTERFACE HighFive)
    target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_HIGH_FIVE)
    set(GRIDFORMAT_HAVE_HIGH_FIVE true)
    if (MPI_FOUND)
        target_compile_definitions(${PROJECT_NAME} INTERFACE GRIDFORMAT_HAVE_PARALLEL_HIGH_FIVE)
        set(GRIDFORMAT_HAVE_PARALLEL_HIGH_FIVE true)
    endif ()
endif ()
